# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker
        uses: docker/setup-qemu-action@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Run Unit Tests
        run: go test -v ./tests/unit/...

      - name: Run Integration Tests
        run: go test -v ./tests/integration/...

      # - name: Set environment variable for CI
      #   run: echo "MY_ENV_FILE=.env.ci" >> $GITHUB_ENV

      - name: Debug .env.ci file
        run: |
          echo "----- .env.ci file contents -----"
          cat .env.ci

      - name: Run service container for E2E tests using docker-compose
        run: docker compose -p alchemorsel --env-file .env.ci up -d

      - name: Check PostgreSQL logs
        run: docker logs postgres || true

      - name: Wait for Postgres to be ready
        run: |
          echo "Waiting for Postgres to be ready on port 5432..."
          for i in {1..10}; do
            if nc -z localhost 5432; then
              echo "Postgres is ready!"
              exit 0
            fi
            echo "Waiting... ($i/10)"
            sleep 5
          done
          echo "Postgres did not become ready in time."
          exit 1

      - name: Wait for service to be ready
        run: |
          echo "Waiting for recipeservice to be ready on port 8080..."
          for i in {1..10}; do
            if nc -z localhost 8080; then
              echo "recipeservice is up!"
              exit 0
            fi
            echo "Waiting... ($i/10)"
            sleep 5
          done
          echo "recipeservice did not become ready in time."
          exit 1

      - name: Debug recipeservice container environment
        run: |
          echo "----- Inspecting app container -----"
          CONTAINER_ID=$(docker compose -p alchemorsel ps -q app)
          echo "App container ID: $CONTAINER_ID"
          docker inspect $CONTAINER_ID
          echo "----- App container environment variables -----"
          docker exec $CONTAINER_ID env || echo "Could not exec into app container"

      - name: Wait for recipeservice DNS resolution in network
        run: docker run --network alchemorsel_ci_network --rm alpine sh -c "i=0; timeout=30; while [ $i -lt $timeout ]; do if getent hosts recipeservice; then exit 0; fi; echo 'Waiting for DNS resolution for recipeservice...'; i=$((i+1)); sleep 1; done; echo 'DNS resolution for recipeservice failed after $timeout seconds'; exit 1"

      - name: Pause before Newman
        run: sleep 10

      - name: Wait for recipeservice HTTP response in network
        run: |
          docker run --network alchemorsel_ci_network --rm alpine sh -c "apk add --no-cache curl >/dev/null 2>&1 && i=0; timeout=30; while [ $i -lt $timeout ]; do if curl -sS http://recipeservice:8080 >/dev/null; then echo 'Got HTTP response from recipeservice'; exit 0; fi; echo 'Waiting for HTTP response from recipeservice...'; i=$((i+1)); sleep 1; done; echo 'HTTP response from recipeservice not received after $timeout seconds'; exit 1"

      - name: Install Newman
        run: npm install -g newman

      - name: Run Newman E2E tests
        run: docker run --network alchemorsel_ci_network --rm -v $(pwd)/tests:/etc/newman postman/newman:alpine run /etc/newman/collections/user_endpoints.postman_collection.json --env-var "baseUrl=http://recipeservice:8080" --delay-request 500

      - name: Cleanup E2E containers
        if: always()
        run: |
          docker compose -p alchemorsel down

      - name: Print Docker logs
        if: always()
        run: docker logs recipeservice

      - name: Stop Docker container
        if: always()
        run: docker compose down 