# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DB_HOST: postgres
      DB_PORT: 5432

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Run Unit Tests
        run: go test -v ./...

      - name: Start Docker Services
        run: docker compose up --build -d

      - name: Debug Environment Variables
        run: echo "POSTGRES_USER=$POSTGRES_USER, POSTGRES_DB=$POSTGRES_DB, JWT_SECRET=$JWT_SECRET, DB_HOST=$DB_HOST, DB_PORT=$DB_PORT"

      - name: Debug Docker Compose Config
        run: docker compose config

      - name: Run Integration Tests
        run: go test -v ./tests/integration/...

      - name: Wait for HTTP health
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/v1/health; then
              echo "App is ready"
              exit 0
            fi
            echo "Waiting for app to become healthy..."
            sleep 1
          done
          echo "App did not become healthy in time"
          exit 1

      - name: Run Newman E2E Tests
        run: |
          docker run --rm --network container:app \
            -v ${{ github.workspace }}/tests:/etc/newman \
            postman/newman:alpine run /etc/newman/collections/e2e_collection.json \
              --env-var "baseUrl=http://localhost:8080" --delay-request 500

      - name: Print logs on failure
        if: failure()
        run: docker compose -f docker-compose.yml logs

      - name: Cleanup
        if: always()
        run: docker compose -f docker-compose.yml down -v 