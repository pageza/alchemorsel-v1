{
  "info": {
    "name": "Admin Endpoints",
    "description": "Collection for testing admin endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Get System Stats",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{admin_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/v1/admin/stats",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "admin", "stats"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains system stats\", function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('users');",
              "    pm.expect(response).to.have.property('recipes');",
              "    pm.expect(response).to.have.property('system');",
              "    pm.expect(response.system).to.have.property('cpu');",
              "    pm.expect(response.system).to.have.property('memory');",
              "    pm.expect(response.system).to.have.property('disk');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get User List",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{admin_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/v1/admin/users",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "admin", "users"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains user list\", function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('users');",
              "    pm.expect(response.users).to.be.an('array');",
              "    pm.expect(response).to.have.property('total');",
              "    pm.expect(response).to.have.property('page');",
              "    pm.expect(response).to.have.property('limit');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update User Role",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{admin_token}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"user_id\": \"{{user_id}}\",\n    \"role\": \"premium\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/admin/users/{{user_id}}/role",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "admin", "users", "{{user_id}}", "role"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"User role updated successfully\", function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('message');",
              "    pm.expect(response.message).to.include('role');",
              "    pm.expect(response).to.have.property('user');",
              "    pm.expect(response.user.role).to.equal('premium');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get System Logs",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{admin_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/v1/admin/logs",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "admin", "logs"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains system logs\", function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('logs');",
              "    pm.expect(response.logs).to.be.an('array');",
              "    pm.expect(response).to.have.property('total');",
              "    pm.expect(response).to.have.property('page');",
              "    pm.expect(response).to.have.property('limit');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Error Reports",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{admin_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/v1/admin/errors",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "admin", "errors"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains error reports\", function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('errors');",
              "    pm.expect(response.errors).to.be.an('array');",
              "    pm.expect(response).to.have.property('total');",
              "    pm.expect(response).to.have.property('page');",
              "    pm.expect(response).to.have.property('limit');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update System Config",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{admin_token}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"max_upload_size\": 10485760,\n    \"allowed_file_types\": [\"jpg\", \"png\", \"pdf\"],\n    \"maintenance_mode\": false\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/admin/config",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "admin", "config"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Config updated successfully\", function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('message');",
              "    pm.expect(response.message).to.include('config');",
              "    pm.expect(response).to.have.property('config');",
              "    pm.expect(response.config.max_upload_size).to.equal(10485760);",
              "    pm.expect(response.config.allowed_file_types).to.include('jpg');",
              "    pm.expect(response.config.maintenance_mode).to.equal(false);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
} 