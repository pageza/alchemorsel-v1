version: "3.9"

services:
  app:
    build: .
    container_name: app
    env_file:
      - .env
    networks:
      - appnet
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "set -x; curl -v http://localhost:8080/v1/health || (echo 'Healthcheck failed with code $?'; exit 1)"]
      interval: 10s
      timeout: 5s
      start_period: 60s
      retries: 5
    secrets:
      - postgres_user
      - postgres_password
      - jwt_secret
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      DB_SOURCE: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
    profiles:
      - development
      - production
      - testing

  postgres:
    image: ankane/pgvector
    container_name: postgres
    secrets:
      - postgres_user
      - postgres_password
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - appnet
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - development
      - production
      - testing

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - appnet
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - development
      - production
      - testing

  # Security scanning service
  security-scan:
    image: aquasec/trivy:latest
    volumes:
      - .:/scan
    command: filesystem --no-progress --severity HIGH,CRITICAL /scan
    profiles:
      - security

volumes:
  postgres-data:
  redis-data:

networks:
  appnet:
    driver: bridge

secrets:
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt